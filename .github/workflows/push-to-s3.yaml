name: Build and push to s3

on: 
  push:
    branches:
      - master
  # PR only for testing
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Config
        id: config
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_REF
          if [ $GITHUB_EVENT_NAME = "pull_request" ]; then
            RUNTYPE="development"
          elif [ $GITHUB_EVENT_NAME = "push" ] && [ $GITHUB_REF = "refs/heads/master" ]; then
            RUNTYPE="production"
          else
            echo "Invalid run"
            exit 1
          fi
          echo $RUNTYPE
          eval "echo \"$(cat _devtools/$RUNTYPE.sh)\"" > _local_envs.sh
          echo "Setting local variables:"
          cat _local_envs.sh
          cat _local_envs.sh >> $GITHUB_OUTPUT
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ steps.config.outputs.ROLE }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0 # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Build the site
        env:
          JEKYLL_ENV: ${{ steps.config.outputs.RUNTYPE }}
          # TODO: run here should have support for config_dev.yaml
        run: |
          bundle exec jekyll build
      # TODO: linkcheck, aspell
      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ steps.config.outputs.BUCKETNAME }}
          PREFIX: ${{ steps.config.outputs.PREFIX }}
        # TODO: this should be a much fancier sync here; if we're doing
        # staging, we should start by copying from existing bucket; either
        # case, we should probably sync using s3cmd sync
        run: 
          if [ -n "$PREFIX" ]; then
             BUCKET_AND_PREFIX="$BUCKET_NAME/$PREFIX"
          else
             BUCKET_AND_PREFIX=$BUCKET_NAME
          fi
          aws s3 cp ./_site/ s3://$BUCKET_AND_PREFIX/ --recursive
